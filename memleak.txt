==21737== Memcheck, a memory error detector
==21737== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21737== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21737== Command: ./runSimulations
==21737== Parent PID: 19832
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400DA7: perhapsTransferCar (side.c:70)
==21737==    by 0x400EAB: runOneSimulation (sim.c:31)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Invalid write of size 8
==21737==    at 0x400CC6: perhapsAddCar (side.c:42)
==21737==    by 0x400E93: runOneSimulation (sim.c:27)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Address 0x7116a40 is 0 bytes inside a block of size 24 free'd
==21737==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21737==    by 0x400DC3: perhapsTransferCar (side.c:72)
==21737==    by 0x400EAB: runOneSimulation (sim.c:31)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Block was alloc'd at
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x400C8A: perhapsAddCar (side.c:37)
==21737==    by 0x400E93: runOneSimulation (sim.c:27)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400CD3: perhapsAddCar (side.c:45)
==21737==    by 0x400E93: runOneSimulation (sim.c:27)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400DA7: perhapsTransferCar (side.c:70)
==21737==    by 0x400F28: runOneSimulation (sim.c:49)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400D4D: perhapsTransferCar (side.c:60)
==21737==    by 0x400F28: runOneSimulation (sim.c:49)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400DA7: perhapsTransferCar (side.c:70)
==21737==    by 0x400F1C: runOneSimulation (sim.c:48)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400F7B: runOneSimulation (sim.c:40)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400F8B: runOneSimulation (sim.c:40)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400B78: clearSide (side.c:7)
==21737==    by 0x40118C: run100Simulations (sim.c:114)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Invalid free() / delete / delete[] / realloc()
==21737==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21737==    by 0x400BA5: clearSide (side.c:8)
==21737==    by 0x40118C: run100Simulations (sim.c:114)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Address 0x7127d30 is 0 bytes inside a block of size 24 free'd
==21737==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21737==    by 0x400DC3: perhapsTransferCar (side.c:72)
==21737==    by 0x400F1C: runOneSimulation (sim.c:48)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Block was alloc'd at
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x400C8A: perhapsAddCar (side.c:37)
==21737==    by 0x400E87: runOneSimulation (sim.c:26)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400B78: clearSide (side.c:7)
==21737==    by 0x40119C: run100Simulations (sim.c:115)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Invalid free() / delete / delete[] / realloc()
==21737==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21737==    by 0x400BA5: clearSide (side.c:8)
==21737==    by 0x40119C: run100Simulations (sim.c:115)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Address 0x7127e50 is 0 bytes inside a block of size 24 free'd
==21737==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21737==    by 0x400DC3: perhapsTransferCar (side.c:72)
==21737==    by 0x400F28: runOneSimulation (sim.c:49)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Block was alloc'd at
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x400C8A: perhapsAddCar (side.c:37)
==21737==    by 0x400E93: runOneSimulation (sim.c:27)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400D4D: perhapsTransferCar (side.c:60)
==21737==    by 0x400F1C: runOneSimulation (sim.c:48)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400D4D: perhapsTransferCar (side.c:60)
==21737==    by 0x400EAB: runOneSimulation (sim.c:31)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400DA7: perhapsTransferCar (side.c:70)
==21737==    by 0x400E9F: runOneSimulation (sim.c:30)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400D4D: perhapsTransferCar (side.c:60)
==21737==    by 0x400E9F: runOneSimulation (sim.c:30)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Invalid write of size 8
==21737==    at 0x400CC6: perhapsAddCar (side.c:42)
==21737==    by 0x400E87: runOneSimulation (sim.c:26)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Address 0x71ab970 is 0 bytes inside a block of size 24 free'd
==21737==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==21737==    by 0x400DC3: perhapsTransferCar (side.c:72)
==21737==    by 0x400E9F: runOneSimulation (sim.c:30)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737==  Block was alloc'd at
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x400C8A: perhapsAddCar (side.c:37)
==21737==    by 0x400E87: runOneSimulation (sim.c:26)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== Conditional jump or move depends on uninitialised value(s)
==21737==    at 0x400CD3: perhapsAddCar (side.c:45)
==21737==    by 0x400E87: runOneSimulation (sim.c:26)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== 
==21737== HEAP SUMMARY:
==21737==     in use at exit: 24,216 bytes in 602 blocks
==21737==   total heap usage: 114,177 allocs, 113,775 frees, 2,308,301 bytes allocated
==21737== 
==21737== 1,600 bytes in 100 blocks are definitely lost in loss record 2 of 8
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x401465: addWaitTime (stats.c:17)
==21737==    by 0x400D7F: perhapsTransferCar (side.c:64)
==21737==    by 0x400EAB: runOneSimulation (sim.c:31)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== 1,600 bytes in 100 blocks are definitely lost in loss record 3 of 8
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x401465: addWaitTime (stats.c:17)
==21737==    by 0x400D7F: perhapsTransferCar (side.c:64)
==21737==    by 0x400E9F: runOneSimulation (sim.c:30)
==21737==    by 0x4010E6: run100Simulations (sim.c:93)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== 8,000 (5,600 direct, 2,400 indirect) bytes in 100 blocks are definitely lost in loss record 7 of 8
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x400BDA: createSide (side.c:14)
==21737==    by 0x401033: createSimulation (sim.c:69)
==21737==    by 0x4010D6: run100Simulations (sim.c:91)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== 13,016 (5,600 direct, 7,416 indirect) bytes in 100 blocks are definitely lost in loss record 8 of 8
==21737==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==21737==    by 0x400AA5: xmalloc (samlib.c:12)
==21737==    by 0x400BDA: createSide (side.c:14)
==21737==    by 0x400FFB: createSimulation (sim.c:68)
==21737==    by 0x4010D6: run100Simulations (sim.c:91)
==21737==    by 0x400A7E: main (runSimulations.c:33)
==21737== 
==21737== LEAK SUMMARY:
==21737==    definitely lost: 14,400 bytes in 400 blocks
==21737==    indirectly lost: 9,816 bytes in 202 blocks
==21737==      possibly lost: 0 bytes in 0 blocks
==21737==    still reachable: 0 bytes in 0 blocks
==21737==         suppressed: 0 bytes in 0 blocks
==21737== 
==21737== For counts of detected and suppressed errors, rerun with: -v
==21737== Use --track-origins=yes to see where uninitialised values come from
==21737== ERROR SUMMARY: 7040 errors from 22 contexts (suppressed: 0 from 0)
